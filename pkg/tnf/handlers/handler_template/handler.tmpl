// Copyright (C) 2020-2021 Red Hat, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

package {{ .Handlername }}

import (
)

//TODO:
type {{ .Handlername }} struct {
	result  int
	timeout time.Duration
	args    []string
	//add special paramter
}

const (
	Command = {{ .Handlername }}
	SuccessfulOutputRegex = `.+`
)

func (h *{{ .Handlername }}) Args() []string {
	return h.args
}

// GetIdentifier returns the tnf.Test specific identifier.
func (h *{{ .Handlername }}) GetIdentifier() identifier.Identifier {
	// TODO create identifier.{{ .Handlername}}Identifier;

	// return identifier.{{ .Handlername}}Identifier	
}

// Timeout return the timeout for the test.
func (h *{{ .Handlername }}) Timeout() time.Duration {
	return h.timeout
}

// Result returns the test result.
func (h *{{ .Handlername }}) Result() int {
	return h.result
}

func (h *{{ .Handlername }}) ReelFirst() *reel.Step {
	return nil
	//fill the stub
}

func (h *{{ .Handlername }}) ReelMatch(_, _, match string) *reel.Step {
	//fill the stub
}

func (h *{{ .Handlername }}) ReelTimeout() *reel.Step {
	return nil
	//fill the stub
}

func (h *{{ .Handlername }}) ReelEOF() {
	//fill the stub
}

func New{{ .Handlername }}(timeout time.Duration) *{{ .Handlername }} {
	//fill the stub
}
